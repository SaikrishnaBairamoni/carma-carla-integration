<launch>
  <arg name='role_name' default='ego_vehicle'/>

  <!--
    ##################
    ## TF remapping ##
    ##################
  -->
  <!-- world to map tf -->
  <node pkg='tf'  type='static_transform_publisher' name='world_to_map' args='0 0 0 0 0 0 /world /map 10' />

  <!-- map to mobility tf -->
  <node pkg='tf'  type='static_transform_publisher' name='map_to_mobility' args='0 0 0 0 0 0 /map /mobility 10' />

  <!-- ego_vehicle to base_link tf -->
  <!-- Disabled as it gets published by ndt_matching -->
  <!--<node pkg='tf'  type='static_transform_publisher' name='$(arg role_name)_to_baselink' args='0 0 0 0 0 0 /$(arg role_name) /base_link 10' />-->

  <!-- ego_vehicle/gnss to gps tf -->
  <node pkg='tf'  type='static_transform_publisher' name='$(arg role_name)gnss_to_gps' args='0 0 0 0 0 0 /$(arg role_name)/gnss/gnss1 /gps 10' />

  <!-- ego_vehicle/lidar to velodyne tf -->
  <node pkg='tf'  type='static_transform_publisher' name='$(arg role_name)lidar_to_velodyne' args='0 0 0 0 0 0 /$(arg role_name)/lidar/lidar1 /velodyne 10' />

  <!-- ego_vehicle/cameraFront to camera tf -->
  <node pkg='tf'  type='static_transform_publisher' name='$(arg role_name)camerafront_to_camera' args='0 0 0 0 0 0 /$(arg role_name)/camera/rgb/front /camera 10' />

  <!--
    #############################################
    ## topic remapping + data type conversions ##
    #############################################
  -->

  <!--
    # gnss #
    Extract the pose from carla odometry.
    Disable this if Autoware should calculate its pose from gnss (see my_localization.launch)
  -->
  <node pkg='carla_carma_bridge' type='carla_to_carma_localization' name='carla_to_carma_localization' output='screen'/>

  <!--
    # twist #
    Extract the twist from carla odometry
  -->
  <node pkg='carla_carma_bridge' type='carla_to_autoware_twist' name='carla_to_autoware_twist' output='screen'/>

  <!--
    # external objects
    Extract the external objects from carla ObjectArray
  -->>
  <node pkg='carla_carma_bridge' type='carla_to_carma_external_objects' name='carla_to_carma_external_objects' output='screen'/>

  <!--
    # ackermann command
    convert vehicle command to carla ackermann drive
  -->
  <node pkg='carla_carma_bridge' type='carma_to_carla_ackermann_cmd' name='carma_to_carla_ackermann_cmd' output='screen'/>

  <!--
    # vehicle status
    convert the vehicle status from carla to autoware
  -->
  <node pkg='carla_carma_bridge' type='carla_to_autoware_vehicle_status' name='carla_to_autoware_vehicle_status' output='screen'/>

</launch>
